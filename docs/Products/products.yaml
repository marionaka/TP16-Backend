#RUTAS
paths:
  /api/products:
    get:
      summary: Obtiene todos los productos
      tags: 
        - Products
      responses:
      "200":
        description: Lista de productos
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Product"
      "500":
        description: Error del servidor
    post:
      summary: Agrega un producto nuevo
      tags: 
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "201":
          description: Producto creado
          content:
            application/json:
              schema:
                type: object
                properties:
                  $ref: "#/components/schemas/Product"
        "500":
          description: Error del servidor
  /api/products/{pid}:
    get:
      summary: Obtiene un producto por su ID
      tags: 
        - Products
      parameters: 
        - in: path
          name: pid
          required: true
          description: ID del producto a obtener
          schema: 
            $type: String
      responses:
        "200":
          description: Producto encontrado
          content: 
            application/json:
              schema: 
                type: object
                properties:
                  $ref: "#/components/schemas/Product"
        "404":
          description: Producto no encontrado
        "500":
          description: Error del servidor
    put:
      summary: Actualiza un producto por su ID
      tags: 
        - Products
      parameters: 
        - in: path
          name: pid
          required: true
          description: ID del producto a actualizar
          schema: 
            $type: String
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/updateProduct"
      responses:
        "200":
          description: Producto actualizado
          content: 
            application/json:
              schema: 
                type: object
                properties:
                  $ref: "#/components/schemas/Product"
        "404":
          description: Producto no encontrado
        "500":
          description: Error del servidor
    delete:
      summary: Elimina un producto por su ID
      tags: 
        - Products
      parameters: 
        - in: path
          name: pid
          required: true
          description: ID del producto a eliminar
          schema: 
            $type: String
      responses:
        "200":
          description: Producto eliminado
          content: 
            application/json:
              schema: 
                type: object
                properties:
                  $ref: "#/components/schemas/Product"
        "404":
          description: Producto no encontrado
        "500":
          description: Error del servidor

#COMPONENTES - ESQUEMAS
components: 
  schemas: 
    Product:
      type: object
      properties:
        _id:
          type: ObjectId
          description: ID del producto (autogenerado por MongoDB)
        title: 
          type: string
          description: Nombre del producto
        description:
          type: string
          description: Descripción del producto
        code:
          type: string
          description: Código alfanumérico del producto
          unique: true
        price:
          type: number
          description: Precio del producto
        status:
          type: boolean
          description: Disponibilidad del producto (por default se setea en true)
        stock: 
          type: integer
          description: Stock del producto
        category:
          type: string
          description: Categoría del producto
        owner: 
          type: string
          description: Correo electrónico del creador del producto (por default se setea en "Admin")
        thumbnail:
          type: string
          description: URL de la imagen del producto
      required:
        - _id
        - title
        - description
        - code
        - price
        - status
        - stock
        - category
        - owner
      example:
        {"_id": "64f0c7ae32d7f67405798201", "title": "Producto de ejemplo", "description": "Este es un producto de ejemplo", "code": "TEST1", "price": 10000, "status": true, "stock": 20, "category": "TEST", "owner": "testmail@gmail.com", "thumbnail": "testimg.jpg"}

#COMPONENTES - CUERPOS DE REQUEST
  requestBodies:
    updateProduct:
      type: object
      properties:
        title: 
          type: string
          description: Nombre del producto
        description:
          type: string
          description: Descripción del producto
        code:
          type: string
          description: Código alfanumérico del producto
          unique: true
        price:
          type: number
          description: Precio del producto
        status:
          type: boolean
          description: Disponibilidad del producto (por default se setea en true)
        stock: 
          type: integer
          description: Stock del producto
        category:
          type: string
          description: Categoría del producto
        owner: 
          type: string
          description: Correo electrónico del creador del producto (por default se setea en "Admin")
        thumbnail:
          type: string
          description: URL de la imagen del producto
      required:
        - title
        - description
        - code
        - price
        - status
        - stock
        - category
        - owner
      example:
        {"_id": "64f0c7ae32d7f67405798201", "title": "Producto de ejemplo", "description": "Este es un producto de ejemplo", "code": "TEST1", "price": 10000, "status": true, "stock": 20, "category": "TEST", "owner": "testmail@gmail.com", "thumbnail": "testimg.jpg"}